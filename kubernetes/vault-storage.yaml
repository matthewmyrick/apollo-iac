---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  namespace: key-vault
data:
  vault.hcl: |
    ui = true
    disable_mlock = true
    
    storage "file" {
      path = "/vault/data"
    }
    
    listener "tcp" {
      address = "0.0.0.0:8200"
      tls_disable = true
    }
    
    api_addr = "http://0.0.0.0:8200"

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vault-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: /var/lib/vault-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vault-pvc
  namespace: key-vault
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: manual

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault
  namespace: key-vault
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      initContainers:
      - name: vault-init
        image: busybox:1.35
        command:
        - "sh"
        - "-c"
        - "chown -R 100:1000 /vault/data && chmod 755 /vault/data"
        volumeMounts:
        - name: vault-data
          mountPath: /vault/data
        securityContext:
          runAsUser: 0
      containers:
      - name: vault
        image: hashicorp/vault:1.15
        ports:
        - containerPort: 8200
          name: vault
        env:
        - name: VAULT_DEV_ROOT_TOKEN_ID
          value: ""
        - name: VAULT_DEV_LISTEN_ADDRESS
          value: "0.0.0.0:8200"
        - name: VAULT_ADDR
          value: "http://127.0.0.1:8200"
        - name: VAULT_CONFIG_DIR
          value: "/vault/config"
        - name: VAULT_LOCAL_CONFIG
          value: |
            ui = true
            disable_mlock = true
            
            storage "file" {
              path = "/vault/data"
            }
            
            listener "tcp" {
              address = "0.0.0.0:8200"
              tls_disable = true
            }
            
            api_addr = "http://0.0.0.0:8200"
        args:
        - "vault"
        - "server"
        - "-config=/tmp/vault.hcl"
        command:
        - "sh"
        - "-c"
        - |
          echo "$VAULT_LOCAL_CONFIG" > /tmp/vault.hcl
          vault server -config=/tmp/vault.hcl
        volumeMounts:
        - name: vault-data
          mountPath: /vault/data
        securityContext:
          runAsUser: 100
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - IPC_LOCK
            drop:
            - ALL
      securityContext:
        fsGroup: 1000
      volumes:
      - name: vault-data
        persistentVolumeClaim:
          claimName: vault-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: vault-service
  namespace: key-vault
spec:
  selector:
    app: vault
  ports:
  - port: 8200
    targetPort: 8200
    nodePort: 30200
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vault-ingress
  namespace: key-vault
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: "vault"
spec:
  ingressClassName: tailscale
  rules:
  - host: vault.tailnet
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vault-service
            port:
              number: 8200