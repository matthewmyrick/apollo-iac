# ArgoCD Projects Configuration
# This file defines the ArgoCD projects for organizing applications

---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: portfolio-site
  namespace: argocd
  labels:
    project-type: "web-application"
spec:
  description: "Portfolio website and related applications"
  
  # Source repositories that apps in this project can deploy from
  sourceRepos:
  - "https://github.com/matthewmyrick/portfolio-site"
  - "https://github.com/matthewmyrick/*"  # Allow all matthewmyrick repos
  - "*"  # Allow any repository (can be restricted later)
  
  # Destinations where apps can deploy to
  destinations:
  - namespace: "portfolio-*"
    server: "https://kubernetes.default.svc"
  - namespace: "default"
    server: "https://kubernetes.default.svc"
  - namespace: "kube-system"
    server: "https://kubernetes.default.svc"
  
  # Cluster resource whitelist (what cluster-scoped resources can be deployed)
  clusterResourceWhitelist:
  - group: ""
    kind: "Namespace"
  - group: "rbac.authorization.k8s.io"
    kind: "ClusterRole"
  - group: "rbac.authorization.k8s.io"
    kind: "ClusterRoleBinding"
  
  # Namespace resource whitelist (what namespaced resources can be deployed)
  namespaceResourceWhitelist:
  - group: ""
    kind: "*"  # Allow all core resources
  - group: "apps"
    kind: "*"  # Allow all apps resources
  - group: "networking.k8s.io"
    kind: "*"  # Allow networking resources
  - group: "extensions"
    kind: "*"  # Allow extensions
  
  # Roles for project access control
  roles:
  - name: admin
    description: "Full access to portfolio-site project"
    policies:
    - p, proj:portfolio-site:admin, applications, *, portfolio-site/*, allow
    - p, proj:portfolio-site:admin, repositories, *, *, allow
    groups:
    - "argocd-admins"

---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: telemetry
  namespace: argocd
  labels:
    project-type: "monitoring"
spec:
  description: "Telemetry, monitoring, and observability applications"
  
  sourceRepos:
  - "https://github.com/matthewmyrick/*"
  - "https://prometheus-community.github.io/helm-charts"
  - "https://grafana.github.io/helm-charts"
  - "*"
  
  destinations:
  - namespace: "telemetry-*"
    server: "https://kubernetes.default.svc"
  - namespace: "monitoring"
    server: "https://kubernetes.default.svc"
  - namespace: "observability"
    server: "https://kubernetes.default.svc"
  - namespace: "default"
    server: "https://kubernetes.default.svc"
  
  clusterResourceWhitelist:
  - group: ""
    kind: "Namespace"
  - group: "rbac.authorization.k8s.io"
    kind: "ClusterRole"
  - group: "rbac.authorization.k8s.io"
    kind: "ClusterRoleBinding"
  - group: "apiextensions.k8s.io"
    kind: "CustomResourceDefinition"
  
  namespaceResourceWhitelist:
  - group: ""
    kind: "*"
  - group: "apps"
    kind: "*"
  - group: "monitoring.coreos.com"
    kind: "*"
  - group: "networking.k8s.io"
    kind: "*"
  
  roles:
  - name: admin
    description: "Full access to telemetry project"
    policies:
    - p, proj:telemetry:admin, applications, *, telemetry/*, allow
    - p, proj:telemetry:admin, repositories, *, *, allow
    groups:
    - "argocd-admins"

---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: storage
  namespace: argocd
  labels:
    project-type: "storage"
spec:
  description: "Storage, databases, and persistent data applications"
  
  sourceRepos:
  - "https://github.com/matthewmyrick/*"
  - "https://charts.bitnami.com/bitnami"
  - "https://helm.twun.io"  # Harbor Helm repository
  - "https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner"
  - "https://docker.github.io/distribution-charts"  # Docker Registry
  - "https://bitnami-labs.github.io/sealed-secrets"  # Sealed Secrets
  - "https://dl.cloudsmith.io/public/infisical/helm-charts/helm/charts/"  # Infisical
  - "https://charts.min.io/"  # MinIO Helm repository
  - "*"
  
  destinations:
  - namespace: "storage-*"
    server: "https://kubernetes.default.svc"
  - namespace: "database"
    server: "https://kubernetes.default.svc"
  - namespace: "persistent-storage"
    server: "https://kubernetes.default.svc"
  - namespace: "vault"
    server: "https://kubernetes.default.svc"
  - namespace: "infisical"
    server: "https://kubernetes.default.svc"
  - namespace: "minio"
    server: "https://kubernetes.default.svc"
  - namespace: "default"
    server: "https://kubernetes.default.svc"
  - namespace: "registry"
    server: "https://kubernetes.default.svc"
  - namespace: "registry-*"
    server: "https://kubernetes.default.svc"
  - namespace: "kube-system"
    server: "https://kubernetes.default.svc"
  - namespace: "sealed-secrets"
    server: "https://kubernetes.default.svc" 
  
  clusterResourceWhitelist:
  - group: ""
    kind: "Namespace"
  - group: ""
    kind: "PersistentVolume"
  - group: "storage.k8s.io"
    kind: "StorageClass"
  - group: "rbac.authorization.k8s.io"
    kind: "ClusterRole"
  - group: "rbac.authorization.k8s.io"
    kind: "ClusterRoleBinding"
  - group: "apiextensions.k8s.io"
    kind: "CustomResourceDefinition"
  - group: "networking.k8s.io"
    kind: "IngressClass"
  - group: "admissionregistration.k8s.io"
    kind: "ValidatingWebhookConfiguration"
  - group: "admissionregistration.k8s.io"
    kind: "MutatingWebhookConfiguration"
  
  namespaceResourceWhitelist:
  - group: ""
    kind: "*"
  - group: "apps"
    kind: "*"
  - group: "batch"
    kind: "*"
  - group: "storage.k8s.io"
    kind: "*"
  - group: "networking.k8s.io"
    kind: "*"
  - group: "rbac.authorization.k8s.io"
    kind: "*"
  - group: "admissionregistration.k8s.io"
    kind: "*"
  
  roles:
  - name: admin
    description: "Full access to storage project"
    policies:
    - p, proj:storage:admin, applications, *, storage/*, allow
    - p, proj:storage:admin, repositories, *, *, allow
    - p, proj:registry:admin, applications, *, registry/*, allow
    - p, proj:registry:admin, repositories, *, *, allow
    groups:
    - "argocd-admins"

---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: integrations
  namespace: argocd
  labels:
    project-type: "integrations"
spec:
  description: "CI/CD integrations, runners, and external service integrations"
  
  sourceRepos:
  - "https://github.com/matthewmyrick/*"
  - "https://actions-runner-controller.github.io/actions-runner-controller"
  - "ghcr.io/actions/actions-runner-controller-charts"
  - "ghcr.io"
  - "https://helm.releases.hashicorp.com"
  - "*"
  
  destinations:
  - namespace: "github-runners"
    server: "https://kubernetes.default.svc"
  - namespace: "integrations-*"
    server: "https://kubernetes.default.svc"
  - namespace: "cicd"
    server: "https://kubernetes.default.svc"
  - namespace: "default"
    server: "https://kubernetes.default.svc"
  
  clusterResourceWhitelist:
  - group: ""
    kind: "Namespace"
  - group: "rbac.authorization.k8s.io"
    kind: "ClusterRole"
  - group: "rbac.authorization.k8s.io"
    kind: "ClusterRoleBinding"
  - group: "apiextensions.k8s.io"
    kind: "CustomResourceDefinition"
  - group: "admissionregistration.k8s.io"
    kind: "MutatingWebhookConfiguration"
  - group: "admissionregistration.k8s.io"
    kind: "ValidatingWebhookConfiguration"
  
  namespaceResourceWhitelist:
  - group: ""
    kind: "*"
  - group: "apps"
    kind: "*"
  - group: "networking.k8s.io"
    kind: "*"
  - group: "actions.summerwind.dev"
    kind: "*"
  - group: "actions.github.com"
    kind: "*"
  - group: "autoscaling"
    kind: "*"
  - group: "coordination.k8s.io"
    kind: "*"
  - group: "rbac.authorization.k8s.io"
    kind: "*"
  
  roles:
  - name: admin
    description: "Full access to integrations project"
    policies:
    - p, proj:integrations:admin, applications, *, integrations/*, allow
    - p, proj:integrations:admin, repositories, *, *, allow
    groups:
    - "argocd-admins"

---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: networking
  namespace: argocd
  labels:
    project-type: "networking"
spec:
  description: "Network infrastructure, VPN, and connectivity applications"
  
  sourceRepos:
  - "https://github.com/matthewmyrick/*"
  - "https://pkgs.tailscale.com/helmcharts"
  - "*"
  
  destinations:
  - namespace: "tailscale-operator"
    server: "https://kubernetes.default.svc"
  - namespace: "networking-*"
    server: "https://kubernetes.default.svc"
  - namespace: "kube-system"
    server: "https://kubernetes.default.svc"
  - namespace: "default"
    server: "https://kubernetes.default.svc"
  
  clusterResourceWhitelist:
  - group: ""
    kind: "Namespace"
  - group: "rbac.authorization.k8s.io"
    kind: "ClusterRole"
  - group: "rbac.authorization.k8s.io"
    kind: "ClusterRoleBinding"
  - group: "apiextensions.k8s.io"
    kind: "CustomResourceDefinition"
  - group: "admissionregistration.k8s.io"
    kind: "MutatingWebhookConfiguration"
  - group: "admissionregistration.k8s.io"
    kind: "ValidatingWebhookConfiguration"
  - group: "networking.k8s.io"
    kind: "IngressClass"
  
  namespaceResourceWhitelist:
  - group: ""
    kind: "*"
  - group: "apps"
    kind: "*"
  - group: "networking.k8s.io"
    kind: "*"
  - group: "rbac.authorization.k8s.io"
    kind: "*"
  - group: "coordination.k8s.io"
    kind: "*"
  
  roles:
  - name: admin
    description: "Full access to networking project"
    policies:
    - p, proj:networking:admin, applications, *, networking/*, allow
    - p, proj:networking:admin, repositories, *, *, allow
    groups:
    - "argocd-admins"
